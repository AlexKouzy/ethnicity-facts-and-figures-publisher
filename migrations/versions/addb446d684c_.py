"""empty message

Revision ID: addb446d684c
Revises: e0248cc6bf14
Create Date: 2018-01-31 12:41:31.489839

"""
import csv

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
from application.cms.models import TypeOfOrganisation

revision = 'addb446d684c'
down_revision = 'e0248cc6bf14'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    type_of_organisation_types = sa.Enum('MINISTERIAL_DEPARTMENT',
                                         'EXECUTIVE_OFFICE',
                                         'NON_MINISTERIAL_DEPARTMENT',
                                         'EXECUTIVE_AGENCY',
                                         'OTHER_BODY',
                                         'COURTS_AND_TRIBUNALS',
                                         'CIVIL_SERVICE',
                                         'DEVOLVED_ADMINISTRATION',
                                         'PUBLIC_CORPORATION',
                                         'INDEPENDENT_BODY',
                                         name='type_of_organisation_types')

    type_of_organisation_types.create(op.get_bind())

    op.create_table('organisation',
        sa.Column('id', sa.String(length=255), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('other_names', postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column('abbreviations', postgresql.ARRAY(sa.String()), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.add_column('organisation', sa.Column('organisation_type', type_of_organisation_types, nullable=False))

    op.get_bind()
    with open('./application/data/organisations.csv') as orgs_file:
        reader = csv.DictReader(orgs_file)
        for row in reader:

            print(row['organisation_type'], row['name'], row['id'], row['abbreviations'], row['other_names'])

            other_names = row.get('other_names')
            if other_names is not None:
                other_names = ','.join(other_names.split('|')).replace("'", "''")

            abbreviations = row.get('abbreviations')
            if abbreviations is not None:
                abbreviations = ','.join(abbreviations.split('|')).replace("'", "''")


            insert_sql = "INSERT INTO organisation (id, name, other_names, abbreviations, organisation_type) VALUES (\'%s\', \'%s\', \'{%s}\', \'{%s}\', \'%s\');" % (row['id'].strip(),
                             row['name'].strip().replace("'", "''"),
                             other_names,
                             abbreviations,
                             row['organisation_type'].strip().replace(' ', '_').replace('-', '_').upper())

            op.execute(insert_sql)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('organisation')
    op.execute('DROP TYPE type_of_organisation_types')
    # ### end Alembic commands ###
