"""empty message

Revision ID: 04625e2d6e60
Revises: e553b195fe90
Create Date: 2017-07-26 12:47:22.745200

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '04625e2d6e60'
down_revision = 'e553b195fe90'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_constraint('db_dimension_measure_id_fkey', 'db_dimension', type_='foreignkey')
    op.drop_constraint('db_page_parent_guid_fkey', 'db_page', type_='foreignkey')
    op.drop_constraint('db_upload_page_id_fkey', 'db_upload', type_='foreignkey')
    op.drop_constraint('db_page_pkey', 'db_page', type_='primary')

    op.add_column('db_page', sa.Column('parent_version', sa.String(), nullable=True))
    op.add_column('db_page', sa.Column('version', sa.String(), nullable=True))
    op.add_column('db_page', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('db_page', sa.Column('updated_at', sa.DateTime(), nullable=True))

    op.add_column('db_dimension', sa.Column('measure_version', sa.String(), nullable=True))
    op.add_column('db_upload', sa.Column('page_version', sa.String(), nullable=True))

    op.execute("UPDATE db_page SET version = '1.0'")
    op.execute("UPDATE db_page SET parent_version = '1.0' WHERE parent_guid IS NOT NULL")
    op.execute("UPDATE db_page SET created_at = now()")
    op.execute("UPDATE db_dimension SET measure_version = '1.0'")
    op.execute("UPDATE db_upload SET page_version = '1.0'")

    op.alter_column('db_page', 'version', existing_type=sa.String(), nullable=False)
    op.alter_column('db_page', 'created_at', existing_type=sa.DateTime(), nullable=False)
    op.alter_column('db_dimension', 'measure_id', existing_type=sa.VARCHAR(length=255), nullable=False)
    op.alter_column('db_dimension', 'measure_version', existing_type=sa.String(), nullable=False)

    op.alter_column('db_upload', 'page_id', existing_type=sa.VARCHAR(length=255), nullable=False)
    op.alter_column('db_upload', 'page_version', existing_type=sa.String(), nullable=False)

    op.create_primary_key('db_page_guid_version_pkey', 'db_page', ['guid', 'version'])
    op.create_unique_constraint('uix_db_page_guid_version', 'db_page', ['guid', 'version'])

    op.create_foreign_key('db_dimension_measure_id_version_fkey', 'db_dimension', 'db_page',
                          ['measure_id', 'measure_version'], ['guid', 'version'])
    op.create_foreign_key('db_upload_page_id_version_fkey', 'db_upload', 'db_page', ['page_id', 'page_version'],
                          ['guid', 'version'])
    op.create_foreign_key('db_page_parent_guid_version_fkey', 'db_page', 'db_page', ['parent_guid', 'parent_version'],
                          ['guid', 'version'])
    op.drop_column('db_page', 'page_json')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_constraint('db_upload_page_id_version_fkey', 'db_upload', type_='foreignkey')
    op.drop_constraint('db_dimension_measure_id_version_fkey', 'db_dimension', type_='foreignkey')
    op.drop_constraint('db_page_parent_guid_version_fkey', 'db_page', type_='foreignkey')
    op.drop_constraint('db_page_guid_version_pkey', 'db_page', type_='primary')
    op.drop_constraint('uix_db_page_guid_version', 'db_page', type_='unique')

    op.drop_column('db_upload', 'page_version')
    op.drop_column('db_dimension', 'measure_version')
    op.drop_column('db_page', 'version')
    op.drop_column('db_page', 'parent_version')

    op.create_primary_key('db_page_pkey', 'db_page', ['guid', ])

    op.create_foreign_key('db_page_parent_guid_fkey', 'db_page', 'db_page', ['parent_guid'], ['guid'])
    op.create_foreign_key('db_dimension_measure_id_fkey', 'db_dimension', 'db_page', ['measure_id'], ['guid'])
    op.create_foreign_key('db_upload_page_id_fkey', 'db_upload', 'db_page', ['page_id'], ['guid'])
    op.add_column('db_page', sa.Column('page_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('db_page', 'created_at')
    op.drop_column('db_page', 'updated_at')


